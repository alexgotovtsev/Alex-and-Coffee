generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Order{
  id                String      @id @default(cuid())
  user              User?       @relation(fields: [userId], references: [id])
  userId            String? 
  amount            Float
  currency          String
  status            String
  paymentIntentId   String?     @unique
  createdDate       DateTime    @default(now())
  products          Product[]
}

model Product {
  id                 String     @id @default(uuid())
  type               String
  name               String
  unit               Float
  unit_amount        Float
  quantity           Float?      @default(0)
  orders             Order[]
}

model Menu {
  id                String      @id @default(cuid())
  name              String      
  type              String
  description       String?
  image             String?
  unit              Float
  currency          String
  not_discounts     Boolean?
  not_bonus_program Boolean?
  unit_amount       Float
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// model User {
//   id                String      @id @default(cuid())
//   name              String
//   phone             Float       @unique
//   viber             String?
//   telegram          String?
//   email             String?     @unique
//   createdDate       DateTime    @default(now())
//   orders            Order[]
// }

model User {
  id              String    @id @default(cuid())
  name            String?
  role            UserRole @default(USER)
  // phone           Float?       @unique
  // viber           String?
  // telegram        String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  createdAt       DateTime    @default(now())
  accounts        Account[]
  sessions        Session[]
  orders          Order[]
}

enum UserRole {
  USER
  ADMIN
  MODERATOR
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}